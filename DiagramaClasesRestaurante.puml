@startuml DiagramaClasesReorganizado_SistemaPedidosRestaurante

!theme plain
skinparam classAttributeIconSize 0
skinparam classFontSize 9
skinparam classAttributeFontSize 8
skinparam linetype ortho

title Diagrama de Clases - Sistema de Pedidos del Restaurante\nArquitectura en Capas con Patrones de Diseño

' === ENUMERACIONES E INTERFACES (PARTE SUPERIOR) ===
enum TipoCombo {
    Basico
    Familiar
    Especial
}

enum TipoPorcion {
    Tomate
    Papas
    Carne
    Queso
}

interface IPedidoComponent {
    +CalcularPrecio(): decimal
    +ObtenerDescripcion(): string
    +ObtenerIngredientes(): List<string>
    +ObtenerTipoComboBase(): TipoCombo
}

' === GRUPO COMBOS ===
package "Entidades Combo" <<Rectangle>> {
    abstract class ComboBE {
        +Id: int
        +Nombre: string
        +Precio: decimal
        +Descripcion: string
        +Tipo: TipoCombo
        --
        +CalcularPrecio(): decimal
        +ObtenerDetalle(): string
        +ToString(): string
    }
    
    class ComboBasicoBE {
        +ComboBasico()
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
        +ObtenerTipoComboBase(): TipoCombo
    }
    
    class ComboFamiliarBE {
        +ComboFamiliar()
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
        +ObtenerTipoComboBase(): TipoCombo
    }
    
    class ComboEspecialBE {
        +ComboEspecial()
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
        +ObtenerTipoComboBase(): TipoCombo
    }
    
    class ComboFactoryBE {
        +{static} CrearCombo(tipo: TipoCombo): ComboBE
        +{static} CrearCombo(tipoString: string): ComboBE
    }
}

' === GRUPO DECORATORS ===
package "Decorators de Porciones" <<Rectangle>> {
    abstract class PorcionDecoratorBE {
        #componente: IPedidoComponent
        --
        #PorcionDecorator(componente: IPedidoComponent)
        +CalcularPrecio(): decimal
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
        +ObtenerTipoComboBase(): TipoCombo
    }
    
    class QuesoDecoratorBE {
        +QuesoDecorator(componente: IPedidoComponent)
        +CalcularPrecio(): decimal
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
    }
    
    class CarneDecoratorBE {
        +CarneDecorator(componente: IPedidoComponent)
        +CalcularPrecio(): decimal
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
    }
    
    class TomateDecoratorBE {
        +TomateDecorator(componente: IPedidoComponent)
        +CalcularPrecio(): decimal
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
    }
    
    class PapasDecoratorBE {
        +PapasDecorator(componente: IPedidoComponent)
        +CalcularPrecio(): decimal
        +ObtenerDescripcion(): string
        +ObtenerIngredientes(): List<string>
    }
}

' === GRUPO LÓGICA DE NEGOCIO ===
package "Lógica de Negocio" <<Rectangle>> {
    class PedidoBuilderBLL {
        -_pedidoComponent: IPedidoComponent
        -_porcionDAL: PorcionAdicionalDAL
        -_comboBase: ComboBE
        --
        +PedidoBuilderBLL(combo: ComboBE)
        +AgregarQueso(): PedidoBuilderBLL
        +AgregarCarne(): PedidoBuilderBLL
        +AgregarTomate(): PedidoBuilderBLL
        +AgregarPapas(): PedidoBuilderBLL
        +AgregarPorcion(tipoPorcion: TipoPorcion): PedidoBuilderBLL
        +Construir(): IPedidoComponent
        +ObtenerPrecioTotal(): decimal
        +ObtenerDescripcionCompleta(): string
        +ObtenerIngredientes(): List<string>
        +ObtenerTipoComboBase(): TipoCombo
        +ConvertirAPedido(): PedidoBE
    }
    
    class SistemaPedidosBLL {
        -{static} _instancia: SistemaPedidosBLL
        -_pedidoDAL: PedidoDAL
        -_porcionDAL: PorcionAdicionalDAL
        -_comboDAL: ComboDAL
        +PedidoActual: PedidoBuilderBLL
        +HistorialPedidos: List<PedidoBE>
        --
        -SistemaPedidosBLL()
        +{static} ObtenerInstancia(): SistemaPedidosBLL
        +CrearNuevoPedido(combo: ComboBE): void
        +AgregarPorcionAdicional(tipoPorcion: TipoPorcion): void
        +QuitarPorcionAdicional(tipoPorcion: TipoPorcion): void
        +FinalizarPedido(): void
        +CargarHistorial(): void
        +ObtenerPorcionesDisponibles(): List<PorcionAdicional>
        +EliminarPedido(pedidoId: int): bool
        +ObtenerPedidoPorId(pedidoId: int): PedidoBE
        +ObtenerTotalPedidoActual(): decimal
        +ObtenerResumenPedidoActual(): string
        +TienePorcion(tipoPorcion: TipoPorcion): bool
        +ObtenerCombosDisponibles(): List<ComboBE>
        +ObtenerComboPorTipo(tipo: TipoCombo): ComboBE
        -ReconstruirPedidoSinPorcion(descripcionOriginal: string, porcionAEliminar: TipoPorcion): void
    }
}

' === GRUPO ENTIDADES DE DATOS ===
package "Entidades de Datos" <<Rectangle>> {
    class PedidoBE {
        +Id: int
        +Combo: ComboBE
        +PorcionesAdicionales: List<PorcionAdicionalBE>
        +Fecha: DateTime
        +Total: decimal
        --
        +Pedido()
        +CalcularTotal(): decimal
        +ObtenerResumen(): string
        +ToString(): string
    }
    
    class PorcionAdicionalBE {
        +Id: int
        +Tipo: TipoPorcion
        +Precio: decimal
        +Cantidad: int
        --
        +PorcionAdicional()
        +PorcionAdicional(tipo: TipoPorcion, precio: decimal)
        +CalcularSubtotal(): decimal
        +ToString(): string
    }
}

' === GRUPO ACCESO A DATOS ===
package "Capa de Acceso a Datos" <<Rectangle>> {
    abstract class AccesoDAL {
        #conexion: SqlConnection
        #transaccion: SqlTransaction
        --
        #AbrirConexion(): void
        #CerrarConexion(): void
        #IniciarTransaccion(): void
        #ConfirmarTransaccion(): void
        #DeshacerTransaccion(): void
        #Leer(sql: string, parametros: List<SqlParameter>): DataTable
        #Escribir(sql: string, parametros: List<SqlParameter>): int
        #EscribirEscalar(sql: string, parametros: List<SqlParameter>): object
        #LeerEscalar(sql: string, parametros: List<SqlParameter>): object
        #CrearParametro(name: string, value: int): SqlParameter
        #CrearParametro(name: string, value: decimal): SqlParameter
        #CrearParametro(name: string, value: DateTime): SqlParameter
        #CrearParametro(name: string, value: string): SqlParameter
        #CrearComando(sql: string, parametros: List<SqlParameter>): SqlCommand
    }
    
    class PedidoDAL {
        -porcionDAL: PorcionAdicionalDAL
        --
        +PedidoDAL()
        +GuardarPedido(pedido: PedidoBE): int
        +CargarPedidos(): List<PedidoBE>
        +EliminarPedido(pedidoId: int): bool
        +ObtenerPedidoPorId(pedidoId: int): PedidoBE
        -CargarPorcionesPedido(pedidoId: int): List<PorcionAdicionalBE>
    }
    
    class ComboDAL {
        +CargarCombos(): List<ComboBE>
        +ObtenerComboPorId(comboId: int): ComboBE
        +ObtenerComboPorTipo(tipo: TipoCombo): ComboBE
        +ActualizarPrecioCombo(comboId: int, nuevoPrecio: decimal): bool
        +ActualizarCombo(combo: ComboBE): bool
    }
    
    class PorcionAdicionalDAL {
        +CargarPorcionesAdicionales(): List<PorcionAdicionalBE>
        +ObtenerPorcionPorId(porcionId: int): PorcionAdicionalBE
        +ObtenerIdPorcion(tipo: TipoPorcion): int
        +ObtenerPrecioPorcion(tipo: TipoPorcion): decimal
    }
}

' === RELACIONES DE HERENCIA E IMPLEMENTACIÓN ===
IPedidoComponent <|-- ComboBE
ComboBE <|-- ComboBasicoBE
ComboBE <|-- ComboFamiliarBE
ComboBE <|-- ComboEspecialBE

IPedidoComponent <|-- PorcionDecoratorBE
PorcionDecoratorBE <|-- QuesoDecoratorBE
PorcionDecoratorBE <|-- CarneDecoratorBE
PorcionDecoratorBE <|-- TomateDecoratorBE
PorcionDecoratorBE <|-- PapasDecoratorBE

AccesoDAL <|-- PedidoDAL
AccesoDAL <|-- ComboDAL
AccesoDAL <|-- PorcionAdicionalDAL

' === RELACIONES DE COMPOSICIÓN Y AGREGACIÓN ===
PedidoBE *-- PorcionAdicionalBE
PedidoBE *-- ComboBE
SistemaPedidosBLL o-- PedidoBuilderBLL
SistemaPedidosBLL *-- PedidoBE
PorcionDecoratorBE o-- IPedidoComponent

' === RELACIONES DE USO/DEPENDENCIA ===
ComboFactoryBE ..> ComboBasicoBE
ComboFactoryBE ..> ComboFamiliarBE
ComboFactoryBE ..> ComboEspecialBE

PedidoBuilderBLL ..> QuesoDecoratorBE
PedidoBuilderBLL ..> CarneDecoratorBE
PedidoBuilderBLL ..> TomateDecoratorBE
PedidoBuilderBLL ..> PapasDecoratorBE
PedidoBuilderBLL ..> PorcionAdicionalDAL

SistemaPedidosBLL ..> PedidoDAL
SistemaPedidosBLL ..> PorcionAdicionalDAL
SistemaPedidosBLL ..> ComboDAL

PedidoDAL ..> ComboFactoryBE
PedidoDAL ..> PorcionAdicionalDAL

ComboDAL ..> ComboFactoryBE
PorcionAdicionalDAL ..> PorcionAdicionalBE

' === RELACIONES CON ENUMERACIONES ===
TipoCombo -- ComboBE
TipoPorcion -- PorcionAdicionalBE

@enduml